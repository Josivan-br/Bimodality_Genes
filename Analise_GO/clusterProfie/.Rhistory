install_github('kkdey/CountClust')
library(devtools)
install.packages("tidyverse")
library("tidyverse")
6
library(tidyr)
q()
library("tidyverse")
library(tidyr)
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
# LIMPANDO A WORKSPACE #
rm(list=ls(all=TRUE))
# IMPORTANDO OS DADOS PARA O R #
# Instalando o pacote xlsx
install.packages("xlsx")
# Carregando o pacote xlsx
library(xlsx)
# IMPORTANDO OS DADOS PARA O R #
# Instalando o pacote xlsx
install.packages("xlsx")
# Carregando o pacote xlsx
library(xlsx)
# IMPORTANDO OS DADOS PARA O R #
# Instalando o pacote xlsx
install.packages("xlsx")
# Carregando o pacote xlsx
library(xlsx)
install.packages("rjava")
install.packages("rJava")
# Carregando o pacote xlsx
library(xlsx)
# Carregando o pacote xlsx
library(xlsx)
library(devtools)
install_github("TaddyLab/maptpx")
install.packages("glmnet")
library(glmnet)
library(data.table)
library(ggplot2)
library(stringr)
library(stringr)
library(data.table)
library(tidyr)
library(tidyverse)
remove.packages{RedeR}
remove.packages("RedeR")
library(stringr)
library(stringr)
library(data.table)
library(tidyr)
remove.packages("tidyr")
install.packages("tidyr")
library(data.table)
library(ggplot2)
remove.packages(ggplot2)
remove.packages("ggplot2")
remove.packages("ggplot2")
remove.packages("dplyr")
remove.packages("tidyr")
library(survival)
library(stringr)
library(clipr)
remove.packages("clipr")
library(stringr)
library(data.table)
library(tidyr)
df <-data.frame(a=c(22,33,28,-4,25,39,54,10,50,66),
b=c(22,33,10,-10,39,70,54,10,51,50))
View(df)
normalize <- function(x){
return((x-min(x)) / (max(x)-min(x)))
}
df2 <- df
df  %>%
mutate_if(is.numeric,
list(~ normalize(.)))
library(stringr)
library(data.table)
library(tidyr)
library(readr)
library(ggplot2)
library(dplyr)
library(tidyr)
library(clipr)
df2 <- df
normalize <- function(x){
return((x-min(x)) / (max(x)-min(x)))
}
df  %>%
mutate_if(is.numeric,
list(~ normalize(.)))
df2
df <-data.frame(a=c(22,33,28,-4,25,39,54,10,50,66),
b=c(22,33,10,-10,39,70,54,10,51,50))
df  %>%
mutate_if(is.numeric,
list(~ round( scales::rescale(.,to=c(0, 100)))))
library(TCGAbiolinks)
library(maftools)
library(tidyverse)
library(DT) # wrapper of JavaScript Library 'DataTables'
library(BSgenome.Hsapiens.UCSC.hg19, quietly = TRUE) # for mutational signatures
# download MAF aligned against hg38
# it saves data inside a GDCdata and project name directory (on BStransky)
maf <- GDCquery_Maf("KIRC", pipelines = "muse", directory = "GDCdata")
sort(colnames(maf))
View(maf)
library(dplyr)
library(dplyr)
library(data.table)
library(dplyr)
library(data.table)
library(maftools)
setwd("E:/AmostrasKIRC/KIRC_Script/Maftools")
KIRC_bimodal.maf <- read.maf("KIRC_bimodal.maf",  isTCGA = TRUE)
library(stringr)
samples_p1 <- substr(read.table("E:/AmostrasKIRC/KIRC_Script/Maftools/GMPR2_0.02_1.lst")$V1,1,12)
samples_p2 <- substr(read.table("E:/AmostrasKIRC/KIRC_Script/Maftools/GMPR2_0.02_2.lst")$V1,1,12)
GMPR2_p1 <- subsetMaf(maf = KIRC_bimodal.maf, tsb = samples_p1, mafObj = TRUE)
GMPR2_p2 <- subsetMaf(maf = KIRC_bimodal.maf, tsb = samples_p2, mafObj = TRUE)
all.clin = read.csv('all_clin_indexed.csv',
sep = ",",
header = T,
stringsAsFactors = T)
# Selecionando os dados
clim_KIRC <- subset(all.clin[(all.clin$disease =="KIRC"),], mafObj = TRUE)
# Transformando dados clinical em arquivo .maf atraves CTSG_P1 e CTSG_P2
clinical_KIRC_p1 <- subsetMaf(maf = GMPR2_p1, tsb = clim_KIRC$bcr_patient_barcode, mafObj = TRUE)
setwd("E:/ProjetosGit/bimodality_Genes/Analise_GO/clusterProfie")
load("E:/ProjetosGit/bimodality_Genes/Analise_GO/clusterProfie/ViasRegulasionKIRC.RData")
library(readr)
library(dplyr)
library(clusterProfiler)
library(org.Hs.eg.db)
library("pathview")
hsa04966_tm7sf3 <- pathview(gene.data  = tm7sf3_lista,
pathway.id = "hsa04966",
species    = "hsa",
out.suffix = "Collecting duct acid secretion_tm7sf3")
